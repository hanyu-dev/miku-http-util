[package]
name = "miku-http-util"
version = "0.6.2"
edition = "2021"
rust-version = "1.80.0"

# === Publication info ===
authors = ["Hantong Chen <cxwdyx620@gmail.com>"]
categories = ["network-programming"]
description = "Utilities for parsing or building parts of HTTP requests and responses."
keywords = ["http", "fluent-uri"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/hanyu-dev/miku-http-util"

[package.metadata.docs.rs]
features = ["dev"]

[dependencies]
anyhow = { version = "1.0.97" }
axum = { version = "0.8.0", default-features = false, optional = true }
base64 = { version = "0.22.1", optional = true }
bytes = { version = "1.0.0", optional = true }
fluent-uri = { version = "0.3.2", default-features = false, optional = true }
foldhash = { version = "0.1.4", optional = true }
http = { version = "1.0.0", optional = true }
# http-body-util = { version = "0.1.0", optional = true }
macro-toolset = { version = "0.8.2", default-features = false, optional = true }
md-5 = { version = "0.10.6", optional = true }
percent-encoding = { version = "2.1.0", optional = true }
prost = { version = "0.13.0", optional = true }
serde = { version = "1.0.0", default-features = false, optional = true }
serde_json = { version = "1.0.0", optional = true }
thiserror = { version = "2.0.12", optional = true }
tower-layer = { version = "0.3.2", optional = true }
tower-service = { version = "0.3.0", optional = true }
tracing = { version = "0.1.0", default-features = false, optional = true }

[dev-dependencies]
axum = "0.8.1"
serde_json = "1.0.139"

[features]
# For development purposes, enable all features.
dev = [
    "feat-integrate-http",
    "feat-integrate-axum",
    "feat-integrate-tower",
    "feat-tracing",
    "feat-request-builder",
    "feat-request-header",
    "feat-request-parser",
    "feat-request-misc-proxy",
    "feat-response",
    "feat-response-ext-json",
]

# Request related features.
feat-request-builder = [
    "dep:macro-toolset",
    "dep:md-5",
    "macro-toolset/feat-hash",
    "macro-toolset/feat-string",
    "macro-toolset/feat-string-ext-urlencoding",
]
feat-request-header = [
    "dep:bytes",
    "dep:http",
    "dep:macro-toolset",
    "dep:prost",
    "macro-toolset/feat-base64",
    "macro-toolset/feat-string",
    "macro-toolset/feat-string-ext-base64",
    "macro-toolset/feat-string-ext-http",
]
feat-request-parser = ["dep:fluent-uri", "dep:foldhash", "dep:macro-toolset"]
feat-request-misc-proxy = [
    "dep:base64",
    "dep:bytes",
    "dep:fluent-uri",
    "dep:http",
    "dep:percent-encoding",
    "dep:serde",
    "dep:thiserror",
    "fluent-uri/std",
]

# Response related features.
feat-response = ["dep:bytes", "dep:http"]
# Enable JSON support for response.
feat-response-ext-json = ["dep:serde", "dep:serde_json"]

# Integrate with the `http` crate.
feat-integrate-http = ["dep:http"]
feat-integrate-axum = ["feat-request-parser", "feat-integrate-http", "dep:thiserror", "dep:axum"]
feat-integrate-tower = [
    "feat-request-parser",
    "feat-integrate-http",
    "dep:thiserror",
    "dep:tower-service",
    "dep:tower-layer",
]

# Enable tracing support.
feat-tracing = ["dep:tracing"]

# === Lints config ===

[lints]
clippy.allow_attributes_without_reason = "warn"
clippy.assertions_on_result_states = "warn"
clippy.assigning_clones = "warn"
clippy.bool_to_int_with_if = "warn"
clippy.cognitive_complexity = "warn"
clippy.create_dir = "warn"
clippy.dbg_macro = "warn"
clippy.debug_assert_with_mut_call = "warn"
clippy.default_trait_access = "warn"
clippy.disallowed_script_idents = "deny"
clippy.doc_link_with_quotes = "warn"
clippy.doc_markdown = "warn"
clippy.else_if_without_else = "deny"
clippy.enum_glob_use = "warn"
clippy.filetype_is_file = "warn"
clippy.inefficient_to_string = "warn"
clippy.mem_forget = "warn"
clippy.missing_panics_doc = "warn"
clippy.mod_module_files = "deny"
clippy.multiple_inherent_impl = "warn"
clippy.mutex_atomic = "warn"
clippy.mutex_integer = "warn"
clippy.needless_continue = "warn"
clippy.panic = "warn"
clippy.significant_drop_in_scrutinee = "warn"
clippy.todo = "warn"
clippy.unimplemented = "warn"
clippy.unreachable = "warn"
clippy.wildcard_dependencies = "deny"
clippy.wildcard_imports = "warn"
rust.unsafe_code = "warn"
rust.missing_docs = "warn"
rust.missing_debug_implementations = "warn"
rust.unreachable_pub = "warn"
